<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    
    <!-- ==========================数据库配置======================= -->
    <!-- 引入配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
    <!-- 配置连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 相关连接信息 -->
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        
        <!-- 连接池自定义设置 -->
        <!-- 最大连接数 -->
        <property name="maxPoolSize" value="30"/>
        
        <!-- 最小连接数 -->
        <property name="minPoolSize" value="10"/>
        
        <!-- 连接关闭时是否自动提交未完成的事务 -->
        <property name="autoCommitOnClose" value="false"/>

        <!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出
SQLException,如设为0则无限期等待。单位毫秒。Default: 0 -->
        <property name="checkoutTimeout" value="1000"/>
        
        <!-- 获取新连接失败后的尝试次数 -->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>
    
    <!-- ==========================Spring与MyBatis整合配置======================= -->
    <!--
    可以看成有两步：
    1. 配置SQLSession，这一部分是属于MyBatis的配置，完全可以写在MyBatis配置文件中
    2. 整合：使用MapperScannerConfigurer来由Mybatis实现DAO，由Spring注入对应的实现类
    -->
    <!-- 配置sqlSession -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入连接池 -->
        <property name="dataSource" ref="dataSource"/>

        <!-- MyBatis全局配置 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>

        <!-- 别名包扫描 -->
        <property name="typeAliasesPackage" value="com.kbrx93.entity"/>

        <!-- SQL配置文件扫描 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- DAO的实现类（由MyBatis完成）,并实现自动注入 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

        <property name="sqlSessionFactoryBeanName" value="sqlSession"/>
        <property name="basePackage" value="com.kbrx93.dao"/>
    </bean>
</beans>